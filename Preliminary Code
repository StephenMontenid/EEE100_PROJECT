# STOPWATCH 
# Main Functions: Start, Stop, Lap/Split, Reset

# program widget
# Defining ariables in this program

# Creating functions of the stopwatch
# Start function
def start(): 
    pass
    
# Stop function
def stop():
    def stop():
    global self_job
    if self_job is not None:
        root.after_cancel(self_job)
        self_job = None
    stop_button.place_forget()
    resume_button.place(x = 75, y = 240, width = 100, height = 40)
    reset_button.place(x = 250, y = 240, width = 100, height = 40)
    
# Lap function
def lap():
    def lap():
    global time_elapsed_1, time_elapsed_2, time_elapsed_3,time_1,self_job,time_2,a,b
    if a < 9:
        lap_times((str(time_elapsed_3).zfill(2) + ":" + str(time_elapsed_2).zfill(2) + ":" + str(time_elapsed_1).zfill(2)), 20+(110*a),400+(b*50))
    else:
        b += 1
        a = 0
        lap_times((str(time_elapsed_3).zfill(2) + ":" + str(time_elapsed_2).zfill(2) + ":" + str(time_elapsed_1).zfill(2)), 20+(110*a),400+(b*50))
    a += 1
    
# Time laps
def lap_times(text,_x,_y):
    label_1 = Label(root, text = "Lap times: ",fg = "black",bg = "white", font = ("Helevitica", 12,"bold"))
    label_2 = Label(root, text = text,fg = "black",bg = "white", font = ("Helevitica", 12,"bold"))
    label_1.place(x= 30, y = 400, width = 100, height = 80)
    label_2.place(x= _y, y = 400+_x, width = 70, height = 80)
    
# Reset function
def reset():
    pass
    
# Buttons configuration and placements
# clock_frame
# start_button 
# stop_button 
# lap_button 
